// File: .env.example
// Generated: 2025-10-08 14:25:54 UTC
// Project ID: proj_5fc90398e8e7
// Task ID: task_b3ky4zj4l4jv

# Environment Configuration
# Copy this file to .env and fill in your actual values

# Application Environment
# Options: development, production, test
NODE_ENV=development

# Server Configuration
PORT=3000

# Database Configuration
# MongoDB connection string
# Format: mongodb://[username:password@]host[:port]/database[?options]
MONGODB_URI=mongodb://localhost:27017/blog_api

# JWT Configuration
# IMPORTANT: Generate strong, random secrets for production
# Use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# JWT Access Token Secret (used for short-lived access tokens)
# Example format (DO NOT use this exact value):
JWT_ACCESS_SECRET=a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2g3h4i5j6k7l8m9n0o1p2q3r4s5t6u7v8w9x0y1z2

# JWT Access Token Expiry (e.g., 15m, 1h, 1d)
JWT_ACCESS_EXPIRY=15m

# JWT Refresh Token Secret (used for long-lived refresh tokens)
# Example format (DO NOT use this exact value):
JWT_REFRESH_SECRET=z9y8x7w6v5u4t3s2r1q0p9o8n7m6l5k4j3i2h1g0f9e8d7c6b5a4z3y2x1w0v9u8t7s6r5q4p3o2n1m0l9k8j7i6h5g4f3e2d1c0b9a8

# JWT Refresh Token Expiry (e.g., 7d, 30d)
JWT_REFRESH_EXPIRY=7d

# Session Configuration
# Required if using express-session
# Generate using: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
SESSION_SECRET=b8c9d0e1f2g3h4i5j6k7l8m9n0o1p2q3r4s5t6u7v8w9x0y1z2a3b4c5d6e7f8g9h0i1j2k3l4m5n6o7p8q9r0s1t2u3v4w5x6y7z8a9

# Email/SMTP Configuration
# Required for password resets and notifications
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=your_email@example.com
EMAIL_PASSWORD=your_email_password_here
EMAIL_FROM=noreply@example.com

# Third-Party API Keys
# Add your service-specific API keys here
API_KEY_SERVICE_NAME=your_api_key_here
STRIPE_SECRET_KEY=sk_test_your_stripe_key_here
SENDGRID_API_KEY=SG.your_sendgrid_key_here

# Rate Limiting Configuration
# Time window in milliseconds (15 minutes = 900000ms)
RATE_LIMIT_WINDOW_MS=900000

# Maximum number of requests per window
RATE_LIMIT_MAX_REQUESTS=100

# CORS Configuration
# Allowed origin(s) for Cross-Origin Resource Sharing
# Use comma-separated list for multiple origins: http://localhost:3000,https://example.com
# WARNING: Never use * in production - always specify exact origins
CORS_ORIGIN=http://localhost:3000

# Logging Configuration (optional)
# Log level: error, warn, info, debug
LOG_LEVEL=info

# Security Headers (optional overrides)
# Set to true to enable additional security features
HELMET_ENABLED=true

# Request Body Size Limits (optional)
# Maximum request body size
MAX_REQUEST_SIZE=10mb
